{"version":3,"file":"statebot-react-hooks.dev.js","sources":["../../src/index.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react'\nimport { Statebot } from 'statebot'\n\n//\n// Use an existing Statebot\n//\nexport function useStatebot (bot) {\n  const [state, setState] = useState(bot.currentState())\n\n  useEffect(() => {\n    let done = false\n\n    const removeListener = bot.onSwitched(toState => {\n      if (done) {\n        return\n      }\n      setState(toState)\n    })\n\n    return () => {\n      done = true\n      removeListener()\n    }\n  }, [bot])\n\n  return state\n}\n\n//\n// Create a new Statebot within a Component\n//\nexport function useStatebotFactory (name, config) {\n  // We memoise Statebot since it's based on EventEmitter,\n  // so we create it once and add/remove listeners for\n  // the life-cycle of the component\n  const { bot, listeners } = useMemo(() => {\n    const {\n      performTransitions = {},\n      onTransitions = {},\n      ...botConfig\n    } = config || {}\n\n    const bot = Statebot(name, botConfig)\n    const listeners = [\n      bot.performTransitions(performTransitions),\n      bot.onTransitions(onTransitions)\n    ]\n\n    return {\n      bot,\n      listeners\n    }\n  }, [])\n\n  useEffect(() =>\n    () => {\n      if (typeof bot.pause === 'function') {\n        bot.pause()\n      }\n      listeners.forEach(off => off())\n    },\n    [bot, listeners]\n  )\n\n  const state = useStatebot(bot)\n\n  return { state, bot }\n}\n\n//\n// Listen to Statebot events with automatic cleanup\n//\nexport function useStatebotEvent (bot, eventName, stateOrFn, maybeFn) {\n  useEffect(() => {\n    let done = false\n\n    function onSwitchFn(...args) {\n      if (done) {\n        return\n      }\n      stateOrFn(...args)\n    }\n    function onEnterOrExitFn(...args) {\n      if (done) {\n        return\n      }\n      maybeFn(...args)\n    }\n\n    const args = typeof maybeFn === 'function'\n      ? [stateOrFn, onEnterOrExitFn]\n      : [onSwitchFn]\n\n    const removeListener = bot[eventName](...args)\n\n    return () => {\n      done = true\n      removeListener()\n    }\n  }, [bot, eventName, stateOrFn, maybeFn])\n}\n"],"names":["useStatebot","bot","useState","currentState","state","setState","useEffect","done","removeListener","onSwitched","toState","useStatebotFactory","name","config","useMemo","performTransitions","onTransitions","botConfig","Statebot","listeners","pause","forEach","off","useStatebotEvent","eventName","stateOrFn","maybeFn","onSwitchFn","onEnterOrExitFn","args"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAMO,SAASA,WAAT,CAAsBC,GAAtB,EAA2B;EAChC,kBAA0BC,cAAQ,CAACD,GAAG,CAACE,YAAJ,EAAD,CAAlC;EAAA;EAAA,MAAOC,KAAP;EAAA,MAAcC,QAAd;;EAEAC,EAAAA,eAAS,CAAC,YAAM;EACd,QAAIC,IAAI,GAAG,KAAX;EAEA,QAAMC,cAAc,GAAGP,GAAG,CAACQ,UAAJ,CAAe,UAAAC,OAAO,EAAI;EAC/C,UAAIH,IAAJ,EAAU;EACR;EACD;;EACDF,MAAAA,QAAQ,CAACK,OAAD,CAAR;EACD,KALsB,CAAvB;EAOA,WAAO,YAAM;EACXH,MAAAA,IAAI,GAAG,IAAP;EACAC,MAAAA,cAAc;EACf,KAHD;EAID,GAdQ,EAcN,CAACP,GAAD,CAdM,CAAT;EAgBA,SAAOG,KAAP;EACD;EAKM,SAASO,kBAAT,CAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;EAIhD,iBAA2BC,aAAO,CAAC,YAAM;EACvC,eAIID,MAAM,IAAI,EAJd;EAAA,qCACEE,kBADF;EAAA,QACEA,kBADF,sCACuB,EADvB;EAAA,kCAEEC,aAFF;EAAA,QAEEA,aAFF,mCAEkB,EAFlB;EAAA,QAGKC,SAHL;;EAMA,QAAMhB,GAAG,GAAGiB,iBAAQ,CAACN,IAAD,EAAOK,SAAP,CAApB;EACA,QAAME,SAAS,GAAG,CAChBlB,GAAG,CAACc,kBAAJ,CAAuBA,kBAAvB,CADgB,EAEhBd,GAAG,CAACe,aAAJ,CAAkBA,aAAlB,CAFgB,CAAlB;EAKA,WAAO;EACLf,MAAAA,GAAG,EAAHA,GADK;EAELkB,MAAAA,SAAS,EAATA;EAFK,KAAP;EAID,GAjBiC,EAiB/B,EAjB+B,CAAlC;EAAA,MAAQlB,GAAR,YAAQA,GAAR;EAAA,MAAakB,SAAb,YAAaA,SAAb;;EAmBAb,EAAAA,eAAS,CAAC;EAAA,WACR,YAAM;EACJ,UAAI,OAAOL,GAAG,CAACmB,KAAX,KAAqB,UAAzB,EAAqC;EACnCnB,QAAAA,GAAG,CAACmB,KAAJ;EACD;;EACDD,MAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,GAAG;EAAA,eAAIA,GAAG,EAAP;EAAA,OAArB;EACD,KANO;EAAA,GAAD,EAOP,CAACrB,GAAD,EAAMkB,SAAN,CAPO,CAAT;EAUA,MAAMf,KAAK,GAAGJ,WAAW,CAACC,GAAD,CAAzB;EAEA,SAAO;EAAEG,IAAAA,KAAK,EAALA,KAAF;EAASH,IAAAA,GAAG,EAAHA;EAAT,GAAP;EACD;EAKM,SAASsB,gBAAT,CAA2BtB,GAA3B,EAAgCuB,SAAhC,EAA2CC,SAA3C,EAAsDC,OAAtD,EAA+D;EACpEpB,EAAAA,eAAS,CAAC,YAAM;EACd,QAAIC,IAAI,GAAG,KAAX;;EAEA,aAASoB,UAAT,GAA6B;EAC3B,UAAIpB,IAAJ,EAAU;EACR;EACD;;EACDkB,MAAAA,SAAS,MAAT;EACD;;EACD,aAASG,eAAT,GAAkC;EAChC,UAAIrB,IAAJ,EAAU;EACR;EACD;;EACDmB,MAAAA,OAAO,MAAP;EACD;;EAED,QAAMG,IAAI,GAAG,OAAOH,OAAP,KAAmB,UAAnB,GACT,CAACD,SAAD,EAAYG,eAAZ,CADS,GAET,CAACD,UAAD,CAFJ;EAIA,QAAMnB,cAAc,GAAGP,GAAG,CAACuB,SAAD,CAAH,OAAAvB,GAAG,EAAe4B,IAAf,CAA1B;EAEA,WAAO,YAAM;EACXtB,MAAAA,IAAI,GAAG,IAAP;EACAC,MAAAA,cAAc;EACf,KAHD;EAID,GA1BQ,EA0BN,CAACP,GAAD,EAAMuB,SAAN,EAAiBC,SAAjB,EAA4BC,OAA5B,CA1BM,CAAT;EA2BD;;;;;;;;;;;;"}