{"version":3,"file":"statebot-react-hooks.js","sources":["../../src/index.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react'\nimport { Statebot } from 'statebot'\n\n//\n// Use an existing Statebot\n//\nexport function useStatebot (bot) {\n  const [state, setState] = useState(bot.currentState())\n\n  useEffect(() => {\n    let done = false\n\n    const removeListener = bot.onSwitched(toState => {\n      if (!done) {\n        setState(toState)\n      }\n    })\n\n    return () => {\n      done = true\n      removeListener()\n    }\n  }, [bot])\n\n  return state\n}\n\n//\n// Create a new Statebot within a Component\n//\nexport function useStatebotFactory (name, config) {\n  // We memoise Statebot since it's based on EventEmitter,\n  // so we create it once and add/remove listeners for\n  // the life-cycle of the component\n  const { bot, listeners } = useMemo(() => {\n    const {\n      performTransitions = {},\n      onTransitions = {},\n      ...botConfig\n    } = config || {}\n\n    const bot = Statebot(name, botConfig)\n    const listeners = [\n      bot.performTransitions(performTransitions),\n      bot.onTransitions(onTransitions)\n    ]\n\n    return {\n      bot,\n      listeners\n    }\n  }, [])\n\n  useEffect(() =>\n    () => {\n      if (typeof bot.pause === 'function') {\n        bot.pause()\n      }\n      listeners.forEach(off => off())\n    },\n    [bot, listeners]\n  )\n\n  const state = useStatebot(bot)\n\n  return { state, bot }\n}\n\n//\n// Listen to Statebot events with automatic cleanup\n//\nexport function useStatebotEvent (bot, eventName, stateOrFn, maybeFn) {\n  useEffect(() => {\n\n    let done = false\n\n    function onSwitchFn(...args) {\n      if (!done) {\n        stateOrFn(...args)\n      }\n    }\n    function onEnterOrExitFn(...args) {\n      if (!done) {\n        maybeFn(...args)\n      }\n    }\n\n    const args = typeof maybeFn === 'function'\n      ? [stateOrFn, onEnterOrExitFn]\n      : [onSwitchFn]\n\n    const removeListener = bot[eventName](...args)\n\n    return () => {\n      done = true\n      removeListener()\n    }\n  }, [bot, eventName, stateOrFn, maybeFn])\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAMO,SAAS,WAAW,EAAE,GAAG,EAAE;AAClC,EAAE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,EAAC;AAExD,EAAE,SAAS,CAAC,MAAM;AAClB,IAAI,IAAI,IAAI,GAAG,MAAK;AAEpB,IAAI,MAAM,cAAc,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,IAAI;AACrD,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,QAAQ,CAAC,OAAO,EAAC;AACzB,OAAO;AACP,KAAK,EAAC;AAEN,IAAI,OAAO,MAAM;AACjB,MAAM,IAAI,GAAG,KAAI;AACjB,MAAM,cAAc,GAAE;AACtB,KAAK;AACL,GAAG,EAAE,CAAC,GAAG,CAAC,EAAC;AAEX,EAAE,OAAO,KAAK;AACd,CAAC;AAKM,SAAS,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE;AAIlD,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,MAAM;AAC3C,IAAI,MAAM;AACV,MAAM,kBAAkB,GAAG,EAAE;AAC7B,MAAM,aAAa,GAAG,EAAE;AACxB,MAAM,GAAG,SAAS;AAClB,KAAK,GAAG,MAAM,IAAI,GAAE;AAEpB,IAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAC;AACzC,IAAI,MAAM,SAAS,GAAG;AACtB,MAAM,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC;AAChD,MAAM,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC;AACtC,MAAK;AAEL,IAAI,OAAO;AACX,MAAM,GAAG;AACT,MAAM,SAAS;AACf,KAAK;AACL,GAAG,EAAE,EAAE,EAAC;AAER,EAAE,SAAS,CAAC;AACZ,IAAI,MAAM;AACV,MAAM,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;AAC3C,QAAQ,GAAG,CAAC,KAAK,GAAE;AACnB,OAAO;AACP,MAAM,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,EAAC;AACrC,KAAK;AACL,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC;AACpB,IAAG;AAEH,EAAE,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAC;AAEhC,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;AACvB,CAAC;AAKM,SAAS,gBAAgB,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE;AACtE,EAAE,SAAS,CAAC,MAAM;AAElB,IAAI,IAAI,IAAI,GAAG,MAAK;AAEpB,IAAI,SAAS,UAAU,CAAC,GAAG,IAAI,EAAE;AACjC,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,SAAS,CAAC,GAAG,IAAI,EAAC;AAC1B,OAAO;AACP,KAAK;AACL,IAAI,SAAS,eAAe,CAAC,GAAG,IAAI,EAAE;AACtC,MAAM,IAAI,CAAC,IAAI,EAAE;AACjB,QAAQ,OAAO,CAAC,GAAG,IAAI,EAAC;AACxB,OAAO;AACP,KAAK;AAEL,IAAI,MAAM,IAAI,GAAG,OAAO,OAAO,KAAK,UAAU;AAC9C,QAAQ,CAAC,SAAS,EAAE,eAAe,CAAC;AACpC,QAAQ,CAAC,UAAU,EAAC;AAEpB,IAAI,MAAM,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,EAAC;AAElD,IAAI,OAAO,MAAM;AACjB,MAAM,IAAI,GAAG,KAAI;AACjB,MAAM,cAAc,GAAE;AACtB,KAAK;AACL,GAAG,EAAE,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,EAAC;AAC1C;;;;"}